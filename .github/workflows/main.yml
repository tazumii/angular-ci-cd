name: Build and Release Angular App

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4.2.1

      - name: Read commit variables
        id: commit_variables
        run: | 
          commit_message=$(git log -1 --pretty=%B)
          
          configuration=$(echo "$commit_message" | grep -oP '(?<=\[configuration=)[^\]]+')
          echo "Configuration: $configuration"
          echo "configuration=$configuration" >> $GITHUB_OUTPUT
          

          if echo "$commit_message" | grep -oP '(?<=\[increment=)[^\]]+'; then
            increment=$(echo "$commit_message" | grep -oP '(?<=\[increment=)[^\]]+')
            echo "Increment: $increment"
            echo "increment=$increment" >> $GITHUB_OUTPUT   
          else
            echo "No increment found in commit message."
          fi
      
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v4.1.1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm install

      - name: Build Angular app
        run: npm run build:${{steps.commit_variables.outputs.configuration}}

      - name: Zip build output
        run: |
          cd dist/angular-ci-cd
          zip -r ../../app-${{steps.commit_variables.outputs.configuration}}.zip .

      - name: Increment Version
        id: auto_increment
        run: |
          git fetch --tags
        
          latest_tag=$(git describe --tags --abbrev=0 $(git rev-list --tags --max-count=1) || echo "v0.0.0")
          echo "Latest tag reachable from this commit: $latest_tag"
        
          IFS='.' read -r major minor patch <<<"${latest_tag#v}"

          case ${{ steps.commit_variables.outputs.increment }}  in
            major)
              major=$((major + 1))
              minor=0
              patch=0
              ;;
            minor)
              minor=$((minor + 1))
              patch=0
              ;;
            *)
              patch=$((patch + 1))
              ;;
          esac

          new_tag="v$major.$minor.$patch-${{ steps.commit_variables.outputs.configuration }}"
          echo "new_tag: $new_tag"
          
          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT
          
          git tag $new_tag
          git push origin $new_tag
          
      - name: Create GitHub Release  
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.auto_increment.outputs.new_tag }}
          name: ${{ steps.auto_increment.outputs.new_tag }}
          body: "Automatically generated release for tag ${{ steps.auto_increment.outputs.new_tag }}"
          draft: false
          prerelease: false
          artifacts: "app-${{steps.commit_variables.outputs.configuration}}.zip"
